@import "../../../../assets/scss/varialbles.scss";

.questions {
    padding: 1rem 1rem 1rem 0rem;
    position: relative;

    &:lang(ar){
        padding: 1rem 0 1rem 1rem;
    }
    .container{
        display: flex;
        flex-wrap: wrap;
        column-gap: 2rem;
        #result{
          background-color: $primary-color-hover;
          border: none;
          width: 3rem;
          height: 3rem;
          border-radius: 50%;

          color: white;
        }
        .result{
        .result_button{
        width: 3rem !important;
        height: 3rem !important;
        border-radius: 50% !important;
        background-color: $primary-color-hover !important;
        border: none;
        color: white;
       
        padding: 0 !important;
      }
      padding-top: 1rem;
            @media(max-width:767px){
              justify-content: center;
            padding-right: 1rem;


            }
            &:lang(ar){
              padding-right: 2rem;
              @media(max-width:767px){
              padding-right: 0;
              padding-left: 1rem;


              }

            }
          }
      }
      & .filter-title{
        display: flex;
        align-items: center;
        border-inline-end: 1px solid rgba($light-purple, .5);
        margin-top: 0.75rem;
        width: 12%;
        justify-content: space-evenly;

        & .material-symbols-outlined{
          color: $blue-color;
          top: 0;
        }
      }

    

      & .filter-field{
        display: flex;

        & label{
          display: flex;
          align-items: center;
          margin-inline-end: .5rem;
        }

        & p-dropdown, & p-calendar{
          flex-grow: 2;
        }
      }

      &__search {
        margin-inline-end: 4.5rem;

        & .search-field{
          border-color: $light-gray;
        }
      }


}


//responsive
@media screen and (max-width: 990px) {
  .filter-title {
    width: 100% !important;
    justify-content: start !important;
  }
}
.total {

  margin-top: 20px;
  font-size: 20px;
  font-weight: bold;
  color: black;

}



.questions {
   padding: 1rem 1rem 1rem 0rem;
    position: relative;


  .cards-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1rem;
  }

  .card {
    height: 20rem;
    max-height: 20rem;
    padding-bottom: 0.5rem;
    overflow-y: auto;
    .p-card-content {
      padding: 1rem;
    }


    .card-header {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      background-color: white;

      i{
        font-size: 1.5rem;
        color: $primary-color;
      }
      .card__actions{
        cursor: pointer;
      }

      .question-text {
        flex: 1;
        font-weight: 600;
      }
    }

    .card-content {
      margin-top: 0.5rem;
      padding-left: 1rem;
      padding-right: 1rem;

      .options-label {
        font-weight: 500;
        margin-bottom: 0.25rem;
        font-size: 1rem;

      }

      .answers_container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.8rem;
        margin-top: 0.5rem;
        row-gap: 0.8rem;
      }
         span{
          background-color: $primary-color-hover;
          padding: 0.5rem;
          border-radius: 6px;
          border: 1px solid black;
         }
    }
  }


}

.reset-btn {
      ::ng-deep button {
        background-color: $primary-color-hover !important;
        color: #fff !important;
        border: none !important;
        border-radius: 50% !important;
        width: 3rem;
        height: 3rem;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
        font-size: 1.5rem;
        transition: background 0.2s;
        &:hover {
          background-color: darken($primary-color-hover, 5%) !important;
        }
      }
    }

      .add-button {
        width: 60px;
        height: 60px;
        font-size: $large-icon;
        border-radius: 50%;
        color: $white-color;
        border: none;
        position: fixed;
        top: calc(100vh - 85px);
        right: 1.5rem;
        background-color: $primary-color;

        &:lang(ar){
          right: unset;
          left: 1.5rem;
        }
      }
